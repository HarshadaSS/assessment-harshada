apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-backend
  labels:
    app: springboot-backend
spec:
  replicas: 2  # Number of pod replicas
  selector:
    matchLabels:
      app: springboot-backend
  template:
    metadata:
      labels:
        app: springboot-backend
    spec:
      containers:
      - name: springboot-backend
        image: backend-img/springboot-backend:latest  # Replace with your Docker image
        ports:
        - containerPort: 8080  # Default port for Spring Boot
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"  # Example of setting active profiles
        resources:
          limits:
            memory: "512Mi"
            cpu: "1000m"
          requests:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30  # Adjust based on app startup time
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: springboot-backend-service
spec:
  selector:
    app: springboot-backend
  ports:
  - protocol: TCP
    port: 80  # External port
    targetPort: 8080  # Internal port where Spring Boot listens
  type: ClusterIP  # Use LoadBalancer or NodePort if external access is needed
