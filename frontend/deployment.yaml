apiVersion: apps/v1
kind: Deployment
metadata:
  name: angular-frontend
  labels:
    app: angular-frontend
spec:
  replicas: 2  # Adjust based on scaling requirements
  selector:
    matchLabels:
      app: angular-frontend
  template:
    metadata:
      labels:
        app: angular-frontend
    spec:
      containers:
      - name: angular-frontend
        image: frontend-img/angular-frontend:latest  # Replace with your image
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: "64Mi"
            cpu: "250m"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: angular-frontend-service
spec:
  selector:
    app: angular-frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer  # Use NodePort if LoadBalancer is unavailable in your cluster
